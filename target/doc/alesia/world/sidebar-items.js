initSidebarItems({"enum":[["UnitState","An enum of all possible states of a unit. Every UnitState has a corresponding animation."]],"fn":[["_guinfo",""],["create_static","Add a static image/texture of given size to the world at the specified location. Statics are rendered in insertion/creation order."],["id_list","Returns a vector containing units of all alive units."],["is_tile_atrange","Returns true if two tile positions are within a given range of each other."],["is_uid_valid","Check if the there exists a unit with the specified id."],["is_unit_player_controlled","Returns true if unit of specified id can be controlled by player. Returns false if the unit does not exist."],["load_world","Load tile map data from the specified file into the world"],["order_pending","Returns true if given order has not yet been completed, else false."],["prep_tiledraw","Return position of tile texture in tileset and tile position on-screen."],["register_unit_type","Register a unit type into the world. Only registered types can have units."],["set_unit_state","Mutator for unit state. Does nothing if unit id does not exist.  "],["spawn_unit","Spawn a unit of the given type with specified tint, and position."],["tile_at","Get the world position of the virtual tile at given screen position."],["tile_perm_at","Returns true if the tile specified allows movement. "],["wots","Convert world co-ordinates into screen co-ordinates for rendering purposes."]],"struct":[["StaticTex","Plain struct to specify the texture, world co-ordinates, and size of a static image"],["Unit","Plain struct to represent a unit in the world."],["UnitType","A struct to specify a Unit-Type. Contains details common to all units of a given type."],["World","Plain struct to contain sprites, tilemap, gameobjects etc."]]});