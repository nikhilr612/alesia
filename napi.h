#ifndef als_bindings_h
#define als_bindings_h

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <stdarg.h>
#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>
#include <stdlib.h>


typedef struct ALS_ResourceSet ALS_ResourceSet;

typedef struct ALS_StateListener ALS_StateListener;

typedef struct ALS_Unit ALS_Unit;

typedef struct ALS_UnitType ALS_UnitType;

typedef struct ALS_OrderList ALS_OrderList;

typedef struct ALS_World ALS_World;

typedef void (*ALS_CInitHandle)(void);

typedef void (*ALS_CTurnHandle)(struct ALS_World*, struct ALS_OrderList*);

void alsBeginS_Display(int32_t sw,
                       int32_t sh,
                       const char *t,
                       struct ALS_ResourceSet *rs,
                       struct ALS_World *w);

void alsBegin_Display(int32_t sw,
                      int32_t sh,
                      const char *t,
                      struct ALS_ResourceSet *rs,
                      struct ALS_World *w,
                      struct ALS_StateListener *sl);

void alsBindInit(struct ALS_StateListener *sl, ALS_CInitHandle f);

void alsBindTurn(struct ALS_StateListener *sl, ALS_CTurnHandle f);

struct ALS_World *alsBlank_World(void);

void alsCreateStatic(struct ALS_World *w, uint8_t tex_id, int32_t cx, int32_t cy);

void alsDefAnim(struct ALS_UnitType *u,
                uint32_t fw,
                uint32_t fh,
                uint8_t frn,
                uint32_t cfx,
                uint32_t cfy,
                float fr,
                bool flip);

void alsMapFont(struct ALS_ResourceSet *rs, uint8_t id, const char *path);

void alsMapTexture(struct ALS_ResourceSet *rs, uint8_t id, const char *path);

struct ALS_ResourceSet *alsNewResourceSet(void);

struct ALS_StateListener *alsNewStateListener(void);

struct ALS_UnitType *alsNewUnitType(uint8_t tid,
                                    const char *name,
                                    float health,
                                    float mov_rate,
                                    uint8_t movt,
                                    uint8_t ran,
                                    float atk,
                                    float adur);

void alsRegisterUnitType(struct ALS_World *w, struct ALS_UnitType *u, uint8_t id);

uint8_t alsSpawnUnit(struct ALS_World *w,
                     uint8_t tid,
                     int32_t tx,
                     int32_t ty,
                     int32_t tint,
                     bool plr);

float alsnGetUnitHealth(struct ALS_World *w, uint8_t uid);

void alsnPushAttackOrder(struct ALS_OrderList *i,
                         uint8_t uid,
                         uint8_t target,
                         int32_t tx,
                         int32_t ty);

void alsnPushMoveOrder(struct ALS_OrderList *i, uint8_t uid, int32_t tx, int32_t ty);

const struct ALS_Unit *alsnUnitRef(struct ALS_World *w, uint8_t uid);

#endif /* als_bindings_h */
